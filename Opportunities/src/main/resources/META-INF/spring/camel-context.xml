<?xml version="1.0" encoding="UTF-8"?>
<!--

     Copyright 2005-2014 Red Hat, Inc.

     Red Hat licenses this file to you under the Apache License, version
     2.0 (the "License"); you may not use this file except in compliance
     with the License.  You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
     implied.  See the License for the specific language governing
     permissions and limitations under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd">
    <bean
        class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" id="bean-a97131ff-1a60-4066-a55b-b5d793949074">
        <property name="location">
            <value>classpath:salesforceconfig.properties</value>
        </property>
    </bean>
    <bean
        class="org.apache.camel.component.salesforce.SalesforceComponent" id="salesforce">
        <property name="loginConfig">
            <bean class="org.apache.camel.component.salesforce.SalesforceLoginConfig">
                <property name="loginUrl" value="${loginUrl}"/>
                <property name="userName" value="${userName}"/>
                <property name="password" value="${password}"/>
                <property name="clientId" value="${clientId}"/>
                <property name="clientSecret" value="${clientSecret}"/>
            </bean>
        </property>
        <property name="config">
            <bean class="org.apache.camel.component.salesforce.SalesforceEndpointConfig">
                <property name="sObjectName" value="${sObjectName}"/>
                <property name="sObjectClass" value="${sObjectClass}"/>
            </bean>
        </property>
        <property name="packages" value="${sObjectDTOPackages}"/>
    </bean>
    <bean class="com.redhat.salesforce.OpportunityCache" id="myOpportunityCache"/>
    <bean class="com.redhat.salesforce.OpportunityService" id="myOpportunityService"/>
    <camelContext id="camelContext-12536084-af85-4392-8afb-c9d2a696b849" xmlns="http://camel.apache.org/schema/spring">
        <restConfiguration bindingMode="json" component="jetty" port="9191"/>
        <rest path="/opportunity">
            <get uri="/getList">
                <to uri="direct:getOppoRecentList"/>
            </get>
            <get uri="/updateOpp/{id}/{stagestatus}">
                <to uri="direct:updateStatus"/>
            </get>
            <get uri="/getProductSet">
                <to uri="direct:getAllProductSet"/>
            </get>
            <get uri="/getBusinessPartners">
                <to uri="direct:getBusinessPartnersSet"/>
            </get>
            <get uri="/getAccountList">
                <to uri="direct:getAccountListSet"/>
            </get>
            <get uri="/getAccountDetail/{id}">
                <to uri="direct:getIndiviualAccount"/>
            </get>
            <get uri="/getContactDetail/{id}">
                <to uri="direct:getIndiviualContact"/>
            </get>
            <get uri="/getContactList">
                <to uri="direct:getContactListSet"/>
            </get>
        </rest>
        <route id="getOppoRecentList">
            <from id="_from1" uri="direct:getOppoRecentList"/>
            <bean id="_bean1" method="clearOpps" ref="myOpportunityCache"/>
            <to id="_to1" uri="direct:AllList"/>
            <bean id="_bean2" method="getAllOpps" ref="myOpportunityCache"/>
            <convertBodyTo id="_convertBodyTo1" type="java.lang.String"/>
            <log id="_log1" message="FINISHED ==> ${body}"/>
        </route>
        <route id="getAllList">
            <from id="_from2" uri="direct:AllList"/>
            <to id="_to2" uri="salesforce:getBasicInfo"/>
            <log id="_log2" message="Query result back from Salesforce: ${body}"/>
            <marshal id="_marshal1">
                <json library="Jackson" prettyPrint="true"/>
            </marshal>
            <split id="_split1">
                <jsonpath suppressExceptions="true">recentItems</jsonpath>
                <log id="_log3" message="${body}"/>
                <to id="_to3" uri="direct:getOppDetail"/>
            </split>
        </route>
        <route id="getIndiviualOpp">
            <from id="_from3" uri="direct:getOppDetail"/>
            <marshal id="_marshal2">
                <json library="Jackson" prettyPrint="true"/>
            </marshal>
            <setHeader headerName="sObjectId" id="_setHeader1">
                <jsonpath>id</jsonpath>
            </setHeader>
            <to id="_to4" uri="salesforce:getSObject?sObjectName=Opportunity"/>
            <log id="_log4" message="return from salesforce ${body}"/>
            <to id="_to5" uri="seda:aggregate"/>
        </route>
        <route id="aggregateOpps">
            <from id="_from4" uri="seda:aggregate"/>
            <bean id="_bean3" method="addOpps(${body})" ref="myOpportunityCache"/>
        </route>
        <route id="updateStatus">
            <from id="_from5" uri="direct:updateStatus"/>
            <setHeader headerName="sObjectId" id="_setHeader2">
                <simple>${headers.id}</simple>
            </setHeader>
            <to id="_to6" uri="salesforce:getSObject?sObjectName=Opportunity"/>
            <log id="_log5" message="stagestatus to update ${headers.stagestatus}"/>
            <bean id="_bean4"
                method="updateStatus(${body},${headers.stagestatus})" ref="myOpportunityService"/>
            <to id="_to7" uri="salesforce:updateSObject?sObjectName=Opportunity"/>
            <log id="_log6" message="return from salesforce ${body}"/>
        </route>
        <route id="getAllProductSet">
            <!-->split id="_split2"/-->
            <from id="_from6" uri="direct:getAllProductSet"/>
            <setHeader headerName="Content-Type" id="_setHeader3">
                <constant>application/json</constant>
            </setHeader>
            <to id="_to8" uri="jetty:https://btierney-oieh3dvflgxgckcs3wxfxoer-demos-dev.mbaas2.tom.redhatmobile.com/sapnwsales?odata=ProductSet&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;chunked=false"/>
            <setHeader headerName="Content-Type" id="_setHeader4">
                <constant>application/json</constant>
            </setHeader>
            <convertBodyTo id="_convertBodyTo2" type="java.lang.String"/>
            <log id="_log7" message="Query result back from SAP: ${body}"/>
        </route>
        <route id="getBusinessPartnersSet">
            <!-->split id="_split2"/-->
            <from id="_from7" uri="direct:getBusinessPartnersSet"/>
            <setHeader headerName="Content-Type" id="_setHeader5">
                <constant>application/json</constant>
            </setHeader>
            <to id="_to9" uri="jetty:https://btierney-oieh3dvflgxgckcs3wxfxoer-demos-dev.mbaas2.tom.redhatmobile.com/sapnwsales?odata=BusinessPartnerSet&amp;bridgeEndpoint=true&amp;throwExceptionOnFailure=false&amp;chunked=false"/>
            <setHeader headerName="Content-Type" id="_setHeader6">
                <constant>application/json</constant>
            </setHeader>
            <convertBodyTo id="_convertBodyTo3" type="java.lang.String"/>
            <log id="_log8" message="Query result back from SAP: ${body}"/>
        </route>
        <route id="getAccountListSet">
            <from id="_from8" uri="direct:getAccountListSet"/>
            <to id="_to10" uri="salesforce:getBasicInfo?sObjectName=Account"/>
            <setHeader headerName="Content-Type" id="_setHeader7">
                <constant>application/json</constant>
            </setHeader>
            <convertBodyTo id="_convertBodyTo4" type="java.lang.String"/>
            <log id="_log10" message="Query Account list result back from SAP: ${body}"/>
        </route>
        <route id="getIndiviualAccount">
            <from id="_from9" uri="direct:getIndiviualAccount"/>
            <setHeader headerName="sObjectId" id="_setHeader9">
                <simple>${headers.id}</simple>
            </setHeader>
            <to id="_to11" uri="salesforce:getSObject?sObjectName=Account"/>
            <setHeader headerName="Content-Type" id="_setHeader10">
                <constant>application/json</constant>
            </setHeader>
            <convertBodyTo id="_convertBodyTo5" type="java.lang.String"/>
            <log id="_log11" message="return from salesforce by Account ID ${body}"/>
            
        </route>
        
        <route id="getIndiviualContact">
            <from id="_from10" uri="direct:getIndiviualContact"/>
            <setHeader headerName="sObjectId" id="_setHeader11">
                <simple>${headers.id}</simple>
            </setHeader>
            <to id="_to12" uri="salesforce:getSObject?sObjectName=Contact"/>
            <setHeader headerName="Content-Type" id="_setHeader11">
                <constant>application/json</constant>
            </setHeader>
            <convertBodyTo id="_convertBodyTo6" type="java.lang.String"/>
            <log id="_log12" message="return from salesforce by Contact ID ${body}"/>
            
        </route>
        <route id="getContactListSet">
            <from id="_from11" uri="direct:getContactListSet"/>
            <to id="_to13" uri="salesforce:getBasicInfo?sObjectName=Contact"/>
            <setHeader headerName="Content-Type" id="_setHeader12">
                <constant>application/json</constant>
            </setHeader>
            <convertBodyTo id="_convertBodyTo7" type="java.lang.String"/>
            <log id="_log13" message="Query Contact list result back from SAP: ${body}"/>
        </route>
    </camelContext>
</beans>
